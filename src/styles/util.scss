// provided to all components through  `global.scss`

/* simple helpers */
.pad {
  &-32 {
    padding: 32px;
  }
  &-sides {
    &-8 {
      padding-right: 8px;
      padding-left: 8px;
    }
  }
}

.margin {
  &-bottom {
    &-16 {
      margin-bottom: 16px;
    }
    &-96 {
      margin-bottom: 96px;
    }
  }
  &-top {
    &-16 {
      margin-top: 16px;
    }
    &-24 {
      margin-top: 24px;
    }
  }

  &-sides {
    &-16 {
      margin-left: 16px;
      margin-right: 16px;
    }

    // essentially horizontal centers on block elements
    &-auto {
      margin-left: auto;
      margin-right: auto;
    }
  }
}

.columns {
  // reverses flow direction of a column on tablet
  &.reverse-on-tablet {
    @media(max-width: $tablet) {
      flex-direction: column-reverse;
      display: flex;
    }
  }
}

// use opacity instead of display:none for hiding to avoid messing with element positioning, so that
// using this class alongside [[`updateClassesIfInView`]] doesn't break.
.hidden {
  opacity: 0;
}

.box-shadow {
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.4);
}

.text-shadow {
  text-shadow:  0px 10px 20px rgba(0, 0, 0, 0.75);
}

// see unicons.ts
.unicon {
  fill: $white !important;
  margin: 8px;

  &.icon {
    &-small {
      svg {
        width: 24px;
        height: 24px;
      }
    }
  
    &-medium {
      svg {
        width: 32px;
        height: 32px;
      }
    }

    &-large {
      svg {
        width: 48px;
        height: 48px;
      }
    }
  }

  &.margin-sides-auto {
    svg {
      display: block;
      margin-left: auto;
      margin-right: auto;
    }
  }

  &.hoverable {
    &:hover, &:focus {
      @extend .animation;
      fill: $rocket !important;
      transition-duration: $link-transition-time;
    }
  }
}
